# Country
on_startup = {
	if = {
		limit = {
			is_emperor_of_china = yes
		}
		save_global_event_target_as = EmperorOfChina
	}
    
	events = {
        GOT_SYSTEM.1    # Global
        GOT_SYSTEM.2    # Country
	}
}

# Country
on_religion_change = {
    on_religion_change_estate_privileges_effect = yes
    
    if = {
		limit = {
			government = native
		}
		change_government = monarchy
		add_government_reform = kingdom_reform
	}
    if = {
		limit = {
			has_heir = yes
		}
		set_heir_religion = ROOT
	}
	if = {
		limit = {
			has_regency = no
		}
		set_ruler_religion = ROOT
	}
	if = {
		limit = {
			has_dlc = "Rights of Man"
			has_consort = yes
		}
		set_consort_religion = ROOT
	}
    add_country_modifier = {
		name = recently_changed_religion_dummy
		duration = 10
		hidden = yes
	}
}

# Country
on_secondary_religion_change = {
}

# Country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
	# ROOT = The winning country
	# FROM = The loosing country
	set_country_flag = helped_rebels_win_war
}

# Country
on_colonial_liberation = {

}

# Country
on_colonial_reintegration = {

}

# Country
on_peace_actor = {

}

# Country
on_peace_recipient = {

}

# Country - ROOT = winning country, FROM = loser country
on_war_won = {

    events = {
        GOT_SK_SYSTEM.1
    }
    
	random_events = {
		100 = GOT_ACCOMPLISHMENTS.1 # History is written by the victors!
		5000 = 0
	}
}

# Country - ROOT = loser country, FROM = winner country
on_war_lost = {
    if = {
        limit = {
            government = republic
            is_lesser_in_union = yes
		}
		change_government_to_monarchy = yes
    }
    add_country_modifier = {
		name = just_lost_war_timer
		duration = 10
		hidden = yes
	}
    
    events = {
        GOT_SK_SYSTEM.2
    }
}

# Country - ROOT = winning country, FROM = loser country
on_battle_won_country = {

    random_events = {
        1000 = GOT_RULER_IMPROVEMENT.1
        1000 = GOT_RULER_IMPROVEMENT.10
        100000 = 0
    }
}

# Country - ROOT = loser country, FROM = winner country
on_battle_lost_country = {

}

# Province - ROOT = location, FROM = loser country
on_battle_won_province = {

}

# Province - ROOT = location, FROM = winner country
on_battle_lost_province = {

    random_events = {
        50 = GOT_WHITE_WALKER.2 
        50 = 0
    }
}

#Unit Scope OnAction for Battle Won
on_battle_won_unit = {
	if = {
		limit = {
			unit_owner = { ai = no } #Scopes to Unit Owner from Unit Scope
			general_with_steam_name = yes #Unit Scope Trigger
		}
		unit_owner = { set_country_flag = general_with_steam_name_won_battle }
	}
}

# #Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {
    
}

# Province - ROOT = location, FROM = country doing it
on_added_to_trade_company ={

}

# Province - ROOT = location, FROM = country doing it
on_removed_from_company ={

}

# Province - ROOT = location, FROM = country doing it
on_company_formed ={

}

# Province - ROOT = location, FROM = country doing it
on_company_disolved ={

}

# Country - ROOT = winning country, FROM = location
on_siege_won_country = {

    random_events = {
        25 = GOT_ACCOMPLISHMENTS.3      # Strategic Excellence
        25 = GOT_ARMY_PROFESSIONALISM.1 # City Sacked
        1000 = 0
    }
}

# Country - ROOT = losing country, FROM = location
on_siege_lost_country = {

}

# Province - ROOT = location, FROM = losing country
on_siege_won_province = {

}

# Province - ROOT = location, FROM = winning country
on_siege_lost_province =  {
    
    events = {
        GOT_WHITE_WALKER.3
    }
}

# Province - ROOT = location, FROM = country that abandons colony - Fired right before the colony is abandoned.
on_abandon_colony = {   

}

# Country 
on_new_monarch = {
    if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = domain_of_spouses_family
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = home_of_consort
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}

    succession_culture_religion_effect = yes
    
	events = {
		GOT_EDUCATION.1     
		GOT_DOTHRAKI.1
        GOT_DAENERYS.100
        GOT_DYNASTIC.21
        GOT_SK_SYSTEM.3
        GOT_SK_SYSTEM.4
        GOT_SK_SYSTEM.5
	}
}

# Country 
on_new_consort = {
	country_event = { id = GOT_CONSORT.2 }
	if = {
		limit = { has_ruler_flag = had_10_years_anniversary }
		clr_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = had_20_years_anniversary }
		clr_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = consort_had_affection_of_ruler }
		clr_ruler_flag = consort_had_affection_of_ruler
	}
	if = {
		limit = { has_country_modifier = sought_after_bachelor }
		remove_country_modifier = sought_after_bachelor
	}
}

# Country 
on_monarch_death = {
    if = {
		limit = { has_country_modifier = sought_after_bachelor }
		remove_country_modifier = sought_after_bachelor
	}
    
}

# Country
on_regent = {

    events = {
        GOT_DOTHRAKI.1      # Dothraki Succession
        GOT_DAENERYS.100
    }
}

# Country
on_new_term_election = {

	events = {
		GOT_GOVERNMENT.2    # On Term Election
		GOT_VOLANTIS.2      # On Term Election for Volantis
	}
}

# Country
on_death_election = {

	events = {
		GOT_GOVERNMENT.1    # On Death Election
		GOT_VOLANTIS.1      # On Death Election for Volantis
        GOT_GOVERNMENT.5    # Lottery Election
	}
}

# Country
on_replace_governor = {
 
	events = {
		GOT_GOVERNMENT.3    # On Replace Governor
	}
}

# Country
on_bankruptcy = {

    events = {
        GOT_SUBJECTS.2
    }
}

# Country - ROOT = annexing country, FROM = annexed country
on_diplomatic_annex = {

	events = {
		GOT_SUBJECTS.100 
        GOT_SUBJECTS.1
	}
    
    random_events = {
        1000 = GOT_RULER_IMPROVEMENT.2
        1000 = GOT_RULER_IMPROVEMENT.11
        10000 = 0
    }
}

# Country
on_heir_death = {
    if = {
		limit = { has_country_flag = heir_dip_education }
		clr_country_flag = heir_dip_education
	}
	if = {
		limit = { has_country_flag = heir_mil_education }
		clr_country_flag = heir_mil_education
	}
	if = {
		limit = { has_country_flag = heir_adm_education }
		clr_country_flag = heir_adm_education
	}
	if = {
		limit = { has_ruler_flag = well_advised_tutored_heir }
		clr_ruler_flag = well_advised_tutored_heir
	}
	if = {
		limit = { has_ruler_flag = heir_went_on_grand_tour }
		clr_ruler_flag = heir_went_on_grand_tour
	}
}

# Country
on_queen_death = {
    if = {
		limit = { has_consort_flag = 10_years_anniversary }
		set_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_consort_flag = 20_years_anniversary }
		set_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_consort_flag = consort_has_affection_of_ruler }
		set_ruler_flag = consort_had_affection_of_ruler
	}

	if = {
		limit = {
			has_regency = no
			NOT = { has_ruler_flag = widow_widower }
		}
		set_ruler_flag = widow_widower
	}
	if = {
		limit = { has_consort_regency = no }
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = { has_ruler_flag = accepted_help_from_spouses_family }
		clr_ruler_flag = accepted_help_from_spouses_family
	}
	if = {
		limit = { has_ruler_flag = helped_spouses_family }
		clr_ruler_flag = helped_spouses_family
	}
	if = {
		limit = { has_ruler_flag = refused_to_help_spouses_family }
		clr_ruler_flag = refused_to_help_spouses_family
	}
	if = {
		limit = { has_ruler_flag = has_lowborn_consort }
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	if = {
		limit = { has_ruler_flag = has_lowborn_consort }
		clr_ruler_flag = has_lowborn_consort
	}
	if = {
		limit = { has_country_modifier = consort_adm_advice }
		remove_country_modifier = consort_adm_advice
	}
	if = {
		limit = { has_country_modifier = consort_dip_advice }
		remove_country_modifier = consort_dip_advice
	}
	if = {
		limit = { has_country_modifier = consort_mil_advice }
		remove_country_modifier = consort_mil_advice
	}
	if = {
		limit = { has_country_modifier = without_spouse_advice }
		remove_country_modifier = without_spouse_advice
	}
	if = {
		limit = { has_ruler_modifier = affectionate_royal_couple }
		remove_country_modifier = affectionate_royal_couple
	}
	clr_ruler_flag = marriage_length
}

# Country
on_new_heir = {
 
}

# Country
on_weak_heir_claim = {

	events = {
		GOT_PRETENDER.1 # Successor Claim
	}
}

# Country
on_heir_needed_theocracy = {
    events = {
		GOT_THEOCRACY.1
	}
}

# Country
on_successive_emperor = {

}

# Country
on_released_hre_member = {

}

# Country
on_hre_member_false_religion = {

}

# Country
on_hre_member_true_religion = {

}

# Country
on_hre_wins_defensive_war = {

}

# Country
on_hre_member_annexed = {

}

# Country
on_hre_released_vassal = {

}

# Country
on_hre_defense = {
    
}

# Country
on_hre_non_defense = {

}

# Province
on_hre_province_reconquest = {

}

# Country
on_government_change = {
    if = {
		limit = {
			NOT = { government = monarchy }
            NOT = { government = occult }
            NOT = { government = mythical }
			any_owned_province = {
				has_province_modifier = domain_of_spouses_family
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			NOT = { government = monarchy }
            NOT = { government = occult }
            NOT = { government = mythical }
			any_owned_province = {
				has_province_modifier = home_of_consort
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
}

# Country
on_native_change_government = {

}

# Country - ROOT = annexing country, FROM = annexed country
on_integrate = {
    events = {
        GOT_INTEGRATION.1
	}
}

# Country - ROOT = annexing country, FROM = annexed country
on_annexed = {
    events = {
        GOT_SK_SYSTEM.30 # Seven Kingdoms dismantled
        GOT_SK_SYSTEM.31 # Claim the Iron Throne
	}
    on_annexed_estate_privileges_effect = yes
}

# Country - ROOT = current country, FROM = emperor
on_chinese_empire_dismantled = {
    clear_global_event_target = EmperorOfChina
	events = {
	}
}


# Country - ROOT = old emperor, FROM = new emperor
on_mandate_of_heaven_gained = {
    save_global_event_target_as = EmperorOfChina
    add_government_reform = royal_house_reform
	set_mandate = 60
	set_meritocracy = 60
    add_country_modifier = {
		name = new_iron_throne_holder
		duration = 9125
	}
    westeros_superregion = {
		limit = {
			NOT = { is_core = ROOT }
		}
		add_permanent_claim = ROOT
	}
    if = {
		limit = {
			has_country_modifier = lost_mandate_of_heaven
		}
		remove_country_modifier = lost_mandate_of_heaven
	}
    country_event = {
		id = GOT_SK_RANDOM.31
		days = 365
	}
	country_event = {
		id = GOT_SK_RANDOM.32
		days = 183
	}
	country_event = {
		id = GOT_SK_SYSTEM.32 #
		days = 1825
	}
}

# Country - ROOT = old emperor, FROM = new emperor
on_mandate_of_heaven_lost = {
    remove_government_reform = royal_house_reform
    add_government_reform = noble_house_reform
    set_government_rank = 2
    
	add_country_modifier = {
		name = lost_mandate_of_heaven
		duration = 7300
	}
    
    add_stability = -2
	westeros_superregion = {
		limit = {
			is_permanent_claim = ROOT
		}
		remove_claim = ROOT
	}
    if = {
		limit = {
			has_country_modifier = new_iron_throne_holder
		}
		remove_country_modifier = new_iron_throne_holder
	}
}

# Country
on_dismantle_revolution = {
	set_revolution_target = ---
}

# Country
on_lock_hre_religion = {

}

# Country
on_change_hre_religion = {

}

# Country
on_hre_religion_white_peace = {

}

# Province
on_adm_development = {
    
    random_events = {
        1000 = GOT_RULER_IMPROVEMENT.3
        1000 = GOT_RULER_IMPROVEMENT.12
        100000 = 0
    }
}

# Province
on_dip_development = {

    random_events = {
        1000 = GOT_RULER_IMPROVEMENT.5
        1000 = GOT_RULER_IMPROVEMENT.14
        100000 = 0
    }
}

# Province
on_mil_development = {  

    random_events = {
        1000 = GOT_RULER_IMPROVEMENT.6
        1000 = GOT_RULER_IMPROVEMENT.15
        100000 = 0
    }
}

# Country
on_overextension_pulse = {

	random_events = {
		100 = GOT_OVEREXTENSION.1
		100 = GOT_OVEREXTENSION.2
		100 = GOT_OVEREXTENSION.3
		100 = GOT_OVEREXTENSION.4
		100 = GOT_OVEREXTENSION.5
		100 = GOT_OVEREXTENSION.6
		100 = GOT_OVEREXTENSION.7
		100 = GOT_OVEREXTENSION.8
		100 = GOT_OVEREXTENSION.9
		100 = GOT_OVEREXTENSION.10
	}
}

# Country
on_colonial_pulse = {

	random_events = {
		100 = GOT_COLONIAL.1
		100 = GOT_COLONIAL.2
		100 = GOT_COLONIAL.3
		100 = GOT_COLONIAL.4
		100 = GOT_COLONIAL.5
		100 = GOT_COLONIAL.6
		100 = GOT_COLONIAL.7
		100 = GOT_COLONIAL.8
		10000 = 0
	}
}

# Country
on_siberian_pulse = {
    
}

# Country
on_bi_yearly_pulse = {

	random_events = {
        100 = GOT_CULTURAL_UPRISING.1
        
        100 = GOT_CORRUPTION.16
		100 = GOT_CORRUPTION.17
		100 = GOT_CORRUPTION.18
		100 = GOT_CORRUPTION.19
		100 = GOT_CORRUPTION.20
        
        125 = GOT_CULTURE_RELIGION.1
		125 = GOT_CULTURE_RELIGION.3
		125 = GOT_CULTURE_RELIGION.4
		125 = GOT_CULTURE_RELIGION.5
		125 = GOT_CULTURE_RELIGION.6
		125 = GOT_CULTURE_RELIGION.7
		125 = GOT_CULTURE_RELIGION.8
		125 = GOT_CULTURE_RELIGION.9
		125 = GOT_CULTURE_RELIGION.10
		125 = GOT_CULTURE_RELIGION.11
		125 = GOT_CULTURE_RELIGION.12
		125 = GOT_CULTURE_RELIGION.13
		125 = GOT_CULTURE_RELIGION.14
		125 = GOT_CULTURE_RELIGION.15
		125 = GOT_CULTURE_RELIGION.16
		100 = GOT_CULTURE_RELIGION.17
		125 = GOT_CULTURE_RELIGION.18
		125 = GOT_CULTURE_RELIGION.19
		125 = GOT_CULTURE_RELIGION.20
		175 = GOT_CULTURE_RELIGION.21
		125 = GOT_CULTURE_RELIGION.22
		125 = GOT_CULTURE_RELIGION.23
        
        # Espionage
		100 = GOT_ESPIONAGE.1
		100 = GOT_ESPIONAGE.4
        40  = GOT_ESPIONAGE.6
		100 = GOT_ESPIONAGE.8
		80  = GOT_ESPIONAGE.9
        
        # Professionalism
		100 = GOT_ARMY_PROFESSIONALISM.4
		100 = GOT_ARMY_PROFESSIONALISM.5
		75  = GOT_ARMY_PROFESSIONALISM.6
		100 = GOT_ARMY_PROFESSIONALISM.8
		100 = GOT_ARMY_PROFESSIONALISM.9
		100 = GOT_ARMY_PROFESSIONALISM.10
		100 = GOT_ARMY_PROFESSIONALISM.11
		75  = GOT_ARMY_PROFESSIONALISM.12
		100 = GOT_ARMY_PROFESSIONALISM.13
		75  = GOT_ARMY_PROFESSIONALISM.16
        
        # Agenda from the Estates
		1000 = GOT_ESTATE_SYSTEM.1
        
		2000 = 0
	}
}

# Country
on_bi_yearly_pulse_2 = {

    random_events = {
        100 = GOT_CORRUPTION.1
		100 = GOT_CORRUPTION.2
		100 = GOT_CORRUPTION.3
		100 = GOT_CORRUPTION.4
		100 = GOT_CORRUPTION.5
		100 = GOT_CORRUPTION.6
		100 = GOT_CORRUPTION.7
		100 = GOT_CORRUPTION.8
		100 = GOT_CORRUPTION.9
		100 = GOT_CORRUPTION.10
		200 = GOT_CORRUPTION.11
		200 = GOT_CORRUPTION.12
		200 = GOT_CORRUPTION.13
		200 = GOT_CORRUPTION.14
		200 = GOT_CORRUPTION.15
        
        100 = GOT_QARTH.1
		100 = GOT_QARTH.2
		100 = GOT_QARTH.3
		100 = GOT_QARTH.4 
		100 = GOT_QARTH.5 
		100 = GOT_QARTH.7 
		100 = GOT_QARTH.8 
		100 = GOT_QARTH.9
        
        500 = GOT_SLAVERY.1
        500 = GOT_SLAVERY.2
        100 = GOT_SLAVERY.3
        
        10000 = 0
	}
}

# Country
on_bi_yearly_pulse_3 = {

	random_events = {
        10 = GOT_ACCOMPLISHMENTS.6 # Grand Army
		10 = GOT_ACCOMPLISHMENTS.7 # Colonial Vigor
		10 = GOT_ACCOMPLISHMENTS.8 # Treasures of Exploration
		10 = GOT_ACCOMPLISHMENTS.9 # Peaceful Realm
		10 = GOT_ACCOMPLISHMENTS.10 # One Faith
		10 = GOT_ACCOMPLISHMENTS.11 # Royal Network
		10 = GOT_ACCOMPLISHMENTS.12 # Marcher Lords
		10 = GOT_ACCOMPLISHMENTS.13 # Lord of Many
		10 = GOT_ACCOMPLISHMENTS.14 # Bleed Them Dry
		10 = GOT_ACCOMPLISHMENTS.15 # Prestigeous Realm
		10 = GOT_ACCOMPLISHMENTS.16 # Grand Fleet
		10 = GOT_ACCOMPLISHMENTS.17 # Strategic Blockades
        
		100 = GOT_RELIGION.1
		100 = GOT_RELIGION.2
		100 = GOT_RELIGION.3
		100 = GOT_RELIGION.4
		100 = GOT_RELIGION.5
		100 = GOT_RELIGION.6 
		100 = GOT_RELIGION.7
		100 = GOT_RELIGION.8
        100 = GOT_RELIGION.11
        100 = GOT_RELIGION.12
        
		8000 = 0
	}
}

# Country
on_bi_yearly_pulse_4 = {

}

# Country
on_thri_yearly_pulse = {

    random_events = {
        100 = GOT_DEVOTION.1
		100 = GOT_DEVOTION.2
		100 = GOT_DEVOTION.3
		100 = GOT_DEVOTION.4
		100 = GOT_DEVOTION.5
		100 = GOT_DEVOTION.7
		100 = GOT_DEVOTION.8
		100 = GOT_DEVOTION.9
		100 = GOT_DEVOTION.10
		100 = GOT_DEVOTION.11
		100 = GOT_DEVOTION.12
		100 = GOT_DEVOTION.13
		100 = GOT_DEVOTION.14
		100 = GOT_DEVOTION.15
		100 = GOT_DEVOTION.16
		100 = GOT_DEVOTION.18
		100 = GOT_DEVOTION.19
		100 = GOT_DEVOTION.22
		100 = GOT_DEVOTION.23
		100 = GOT_DEVOTION.24
        50 = GOT_SK_RANDOM.11
		25 = GOT_SK_RANDOM.12
		25 = GOT_SK_RANDOM.24
        
        3000 = 0
    }
}

# Country
on_thri_yearly_pulse_2 = {

    random_events = {
        # Dragon Eggs
        100 = GOT_DRAGON_EGGS.2
		100 = GOT_DRAGON_EGGS.3
        100 = GOT_DRAGON_EGGS.4
        100 = GOT_DRAGON_EGGS.5
        100 = GOT_DRAGON_EGGS.6
        100 = GOT_DRAGON_EGGS.7
        100 = GOT_DRAGON_EGGS.10
        
        3000 = 0
    }
}

# Country
on_thri_yearly_pulse_3 = {
    
}

# Country
on_thri_yearly_pulse_4 = {
    random_events = {
		10 = GOT_SK_RANDOM.45
		10 = GOT_SK_RANDOM.46
		50 = GOT_SK_RANDOM.47
		10 = GOT_SK_RANDOM.48
		10 = GOT_SK_RANDOM.49
		10 = GOT_SK_RANDOM.50
		50 = GOT_SK_RANDOM.51
		10 = GOT_SK_RANDOM.52
		10 = GOT_SK_RANDOM.53
		50 = GOT_SK_RANDOM.54
		10 = GOT_SK_RANDOM.56
		75 = GOT_SK_RANDOM.57
		50 = GOT_SK_RANDOM.58
		10 = GOT_SK_RANDOM.59
		50 = GOT_SK_RANDOM.60
	}
}

# Country
on_four_year_pulse = {

	random_events = {
		100 = GOT_RANDOM_COUNTRY.1 # Envoy falls Ill
		100 = GOT_RANDOM_COUNTRY.2 # Insulted by a Maester
		100 = GOT_RANDOM_COUNTRY.3 # Exotic Trader
		100 = GOT_RANDOM_COUNTRY.4 # A Grand Feast!
		100 = GOT_RANDOM_COUNTRY.5 # Tales FROM beyond the Wall
		100 = GOT_RANDOM_COUNTRY.6 # Infighting
		100 = GOT_RANDOM_COUNTRY.7 # Essosian Traders
		100 = GOT_RANDOM_COUNTRY.8 # Westerosi Traders
		100 = GOT_RANDOM_COUNTRY.9 # Barrow of the First Men
		100 = GOT_RANDOM_COUNTRY.10 # Visit FROM a Spice Trader
		100 = GOT_RANDOM_COUNTRY.11 # Repair the Titan
		100 = GOT_RANDOM_COUNTRY.12 # Commoner's Request
		100 = GOT_RANDOM_COUNTRY.13 # Popular Hedge Wizard
		100 = GOT_RANDOM_COUNTRY.14 # Out of Myrish Fire
		100 = GOT_RANDOM_COUNTRY.15 # $HEIR$ is a lizard!
		100 = GOT_RANDOM_COUNTRY.16 # Fever in court
		100 = GOT_RANDOM_COUNTRY.17 # A Red Comet
		100 = GOT_RANDOM_COUNTRY.18 # Sighting of a Wanderer
		100 = GOT_RANDOM_COUNTRY.19 # Sighting of the Red Wanderer
		100 = GOT_RANDOM_COUNTRY.20 # Child of the Forest sighted!
		100 = GOT_RANDOM_COUNTRY.21 # Crannogmen disappearances
		100 = GOT_RANDOM_COUNTRY.22 # Summer Merchant
		100 = GOT_RANDOM_COUNTRY.23 # Westerosi Merchant
		100 = GOT_RANDOM_COUNTRY.24 # Grand Tournament
		100 = GOT_RANDOM_COUNTRY.25 # [Root.Heir.GetName] adores whores!
		100 = GOT_RANDOM_COUNTRY.26 # War calls!
        
        100 = GOT_CULTURAL.1 # Deserters from the Wall
		100 = GOT_CULTURAL.2 # Mountain Clan Turmoil
		100 = GOT_CULTURAL.3 # The Old Way
		100 = GOT_CULTURAL.4 # A Silken Lover...
        
		100 = GOT_MERCANTILISM.1
        
		10000 = 0
	}
}

# Country
on_four_year_pulse_2 = {
    random_events = {
		#Empire of China
		100 = GOT_SK_RANDOM.1
		100 = GOT_SK_RANDOM.2
		100 = GOT_SK_RANDOM.3
		100 = GOT_SK_RANDOM.4
		75 = GOT_SK_RANDOM.5
		100 = GOT_SK_RANDOM.6
		100 = GOT_SK_RANDOM.7
		100 = GOT_SK_RANDOM.8
		100 = GOT_SK_RANDOM.9
		100 = GOT_SK_RANDOM.10
		100 = GOT_SK_RANDOM.11
		100 = GOT_SK_RANDOM.12
		100 = GOT_SK_RANDOM.13
		100 = GOT_SK_RANDOM.14
		100 = GOT_SK_RANDOM.15
		100 = GOT_SK_RANDOM.16
		100 = GOT_SK_RANDOM.17
		100 = GOT_SK_RANDOM.18
		100 = GOT_SK_RANDOM.19
		100 = GOT_SK_RANDOM.20
		100 = GOT_SK_RANDOM.21
		100 = GOT_SK_RANDOM.22
		100 = GOT_SK_RANDOM.23
		100 = GOT_SK_RANDOM.24
		100 = GOT_SK_RANDOM.25
		100 = GOT_SK_RANDOM.26
		100 = GOT_SK_RANDOM.27
		100 = GOT_SK_RANDOM.28
		100 = GOT_SK_RANDOM.29
		100 = GOT_SK_RANDOM.30
		100 = GOT_SK_RANDOM.35
		100 = GOT_SK_RANDOM.36
		100 = GOT_SK_RANDOM.39
        
		3000 = 0
	}
}

# Country
on_four_year_pulse_3 = {

}

# Country
on_four_year_pulse_4 = {

}

# Country
on_five_year_pulse = {

	random_events = {
		100 = GOT_FAITH_OF_THE_SEVEN.2 # A warrior demands representation!
		100 = GOT_FAITH_OF_THE_SEVEN.4 # Our Faith Rewarded!
		100 = GOT_FAITH_OF_THE_SEVEN.5 # Hand of the Father
		100 = GOT_FAITH_OF_THE_SEVEN.6 # Embrace of the Mother
		100 = GOT_FAITH_OF_THE_SEVEN.7 # Fury of the Warrior
		100 = GOT_FAITH_OF_THE_SEVEN.8 # Purity of the Maiden
		100 = GOT_FAITH_OF_THE_SEVEN.9 # Hammer of the Smith
		100 = GOT_FAITH_OF_THE_SEVEN.10 # Whispers of the Crone
		100 = GOT_FAITH_OF_THE_SEVEN.11 # Presence of the Stranger
		100 = GOT_FAITH_OF_THE_SEVEN.12 # The Song of the Seven
        
        500 = GOT_NIGHTS_WATCH.1        # The Night's Watch demands men!
		500 = GOT_ACCOMPLISHMENTS.18    # A Noble Fool
        500 = GOT_VOLANTIS.10           # A Volantene Honor
        
        200 = GOT_ABSOLUTISM.1
        200 = GOT_ABSOLUTISM.2
        200 = GOT_ABSOLUTISM.3

        1000 = GOT_SK_SYSTEM.10
        1000 = GOT_SK_SYSTEM.11
        1000 = GOT_SK_SYSTEM.12
        
		10000 = 0
	}
}

# Country
on_five_year_pulse_2 = {

}

# Country
on_five_year_pulse_3 = {
    
}

# Country
on_five_year_pulse_4 = {
    # Tradegoods
    random_events = {
		10 = GOT_PRICE_INCREASE.1 
        10 = GOT_PRICE_INCREASE.2
        10 = GOT_PRICE_INCREASE.3 
        10 = GOT_PRICE_INCREASE.4 
        10 = GOT_PRICE_INCREASE.5 
        10 = GOT_PRICE_INCREASE.6 
        10 = GOT_PRICE_INCREASE.7 
        10 = GOT_PRICE_INCREASE.8 
        10 = GOT_PRICE_INCREASE.9 
        10 = GOT_PRICE_INCREASE.10 
        10 = GOT_PRICE_INCREASE.11
        10 = GOT_PRICE_INCREASE.12
        10 = GOT_PRICE_INCREASE.13
        10 = GOT_PRICE_INCREASE.14
        10 = GOT_PRICE_INCREASE.15
        10 = GOT_PRICE_INCREASE.16
        10 = GOT_PRICE_INCREASE.17
        10 = GOT_PRICE_INCREASE.18
        10 = GOT_PRICE_INCREASE.19
        10 = GOT_PRICE_INCREASE.20
        10 = GOT_PRICE_INCREASE.21
        10 = GOT_PRICE_INCREASE.22
        10 = GOT_PRICE_INCREASE.23
        10 = GOT_PRICE_INCREASE.24
        10 = GOT_PRICE_INCREASE.25
        
        10 = GOT_PRICE_DECREASE.1 
        10 = GOT_PRICE_DECREASE.2
        10 = GOT_PRICE_DECREASE.3 
        10 = GOT_PRICE_DECREASE.4 
        10 = GOT_PRICE_DECREASE.5 
        10 = GOT_PRICE_DECREASE.6 
        10 = GOT_PRICE_DECREASE.7 
        10 = GOT_PRICE_DECREASE.8 
        10 = GOT_PRICE_DECREASE.9 
        10 = GOT_PRICE_DECREASE.10 
        10 = GOT_PRICE_DECREASE.11
        10 = GOT_PRICE_DECREASE.12
        10 = GOT_PRICE_DECREASE.13
        10 = GOT_PRICE_DECREASE.14
        10 = GOT_PRICE_DECREASE.15
        10 = GOT_PRICE_DECREASE.16
        10 = GOT_PRICE_DECREASE.17
        10 = GOT_PRICE_DECREASE.18
        10 = GOT_PRICE_DECREASE.19
        10 = GOT_PRICE_DECREASE.20
        10 = GOT_PRICE_DECREASE.21
        10 = GOT_PRICE_DECREASE.22
        10 = GOT_PRICE_DECREASE.23
        10 = GOT_PRICE_DECREASE.24
        10 = GOT_PRICE_DECREASE.25
        
		1000 = 0
	}
}

# Province
on_explore_coast = {

	random_events = {
		100 = GOT_EXPLORATION.9 # Corsairs!
		100 = GOT_ACCOMPLISHMENTS.4 # Coastal Surveying
		10000 = 0
	}
}

# Province
on_conquistador_empty = {

	events = {
		GOT_EXPLORATION.1 # Treasures of Tochtzal
		GOT_EXPLORATION.2 # Ruins of Yeen
	}
    
	random_events = {
		100 = GOT_EXPLORATION.3 # Brindled Men!
		100 = GOT_EXPLORATION.4 # Stinging Flies in $PROVINCENAME$
		100 = GOT_EXPLORATION.5 # Crocodiles in $PROVINCENAME$
		100 = GOT_EXPLORATION.6 # Basilisks in $PROVINCENAME$
		100 = GOT_EXPLORATION.7 # Mysterious Idol
		100 = GOT_EXPLORATION.8 # Wyverns!
		100 = GOT_ACCOMPLISHMENTS.3 # Explorer's Intution
		10000 = 0
	}
}

# Province
on_conquistador_native = {

}

# Country
on_buy_religious_reform = {

}

# Country
on_circumnavigation = {

	events = {
		GOT_EXPLORATION.10 # The First Circumnavigation
		GOT_EXPLORATION.11 # Circumnavigation
	}
}

# Country
on_become_free_city = {

}

# Country
on_remove_free_city = {

}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
	add_province_modifier = {
		name = revoked_estate_modifier
		duration = 5475 #15 years
	}
}

on_revoke_estate_land = {
	add_province_modifier = {
		name = revoked_estate_modifier
		duration = 5475 #15 years
	}
}

on_revoke_estate_land_ai_post = {
	add_local_autonomy = 25
}

on_revoke_estate_land_post = {
	add_local_autonomy = 25
}

on_grant_estate_land = {
	if = {
		limit = {
			has_province_modifier = revoked_estate_modifier
		}
		remove_province_modifier = revoked_estate_modifier
	}
}

# Country
on_death_has_harem = {

}

# Country
on_select_heir_from_harem = {

}

# Country
on_fetishist_cult_change = {

}

# Country
on_gain_great_power_status = {
    if = {
		limit = {
			NOT = { has_country_flag = became_great_power_flag }
		}
		set_country_flag = became_great_power_flag
	}
}

# Country
on_lose_great_power_status = {

}

# Province
on_province_religion_converted = {
    on_province_religion_converted_estate_privileges_effect = yes
}

# Province
on_province_culture_converted = {
    
    random_events = {
        1000 = GOT_RULER_IMPROVEMENT.4
        1000 = GOT_RULER_IMPROVEMENT.13
        100000 = 0
    }
}

# THIS = Province, FROM = Country who Propogated
on_convert_by_trade_policy = {

}

# Province - ROOT = current owner, FROM = old owner
on_province_owner_change = {

    on_province_owner_change_estate_privileges_effect = yes
}

# Country
on_parliament_debate_failed = {

}

# Country
on_parliament_debate_succeeded = {

}

# Country - ROOT = subject, FROM = overlord
on_accept_tribute = {
  
}

# Country - ROOT = subject, FROM = overlord
on_refuse_tribute = {

}

# Country
on_russian_subednik = {

}

# Country
on_russian_oprichnina = {

}

# Country
on_russian_streltsy = {

}

# Province
on_consecrate_patriarch = {

}

# Country
on_leader_recruited = { 

}

# Country
on_general_recruited = {
    add_army_professionalism = 0.01
}

# Country
on_admiral_recruited = {

}

# Country
on_conquistador_recruited = {

}

# Country
on_explorer_recruited = {

}

# Province - ROOT = Province, FROM = Country
on_regiment_recruited = {

}

# Province - ROOT = Province, FROM = Country
on_mercenary_recruited = {
	FROM = {
		add_army_professionalism = -0.05
	}
}

# Province - ROOT = One province in the state
on_add_pasha = {
    
}

# Province - ROOT = One province in the state
on_remove_pasha = {
	
}

# Province 
on_janissaries_raised = {
	
}

on_revolutionary_guard_raised = {
}

# Country
on_reform_enacted = {
   
}

# Country
on_reform_changed = {
    
}

# Province
on_trade_company_investment = {
   
}

# Province
on_center_of_trade_upgrade = {
   
}

# Province
on_center_of_trade_downgrade = {
    
}

# Country
on_culture_promoted = {
    
}

# Province - ROOT = Province, FROM = Previous Country
on_company_chartered = {
	
}

# Country - ROOT = Overlord, FROM = Subject
on_dependency_gained = {
	
}

# Country - ROOT = Overlord, FROM = Subject
on_dependency_lost = {
	
}

# Country - ROOT = Subject, FROM = Overlord
on_create_vassal = {
	
}

# Country - ROOT = Country, FROM = First province in state
on_holy_order_established = {
   
}

# Province - ROOT = Colony, FROM = Home province
on_minority_expelled = {
    
}

# Country - ROOT = Raiding country, FROM = Sea province
on_raid_coast = {
    if = {
		limit = {
			has_faction = pr_buccaneers
		}
		add_faction_influence = {
			faction = pr_buccaneers
			influence = 1
		}
	}
    # Give Pirates CB to targets of Raid Coast
    FROM = {
        every_neighbor_province = {
            limit = { is_sea = no }
            owner = {
                if = {
                    limit = {
                        NOT = {
                            has_casus_belli = {
                                type = cb_pirates
                                target = ROOT
                            }
                        }
                    }
                    
                    add_casus_belli = {
                        target = ROOT
                        type = cb_pirates
                        months = 120
                    }
                }
            }
        }
    }
}

# Country - ROOT = Winner, FROM = Loser
on_flagship_captured = {

	FROM = {
		set_country_flag = captured_flagship_country_flag
	}
}

# Country - ROOT = Winner, FROM = Loser
on_flagship_destroyed = {

	FROM = {
		set_country_flag = sunk_flagship_country_flag
	}
}

# Country - ROOT = Subject, FROM = Overlord
on_country_released = {

}


# ROOT = province, FROM = country
on_trade_good_changed = {
	on_trade_good_changed_estate_privileges_effect = yes
}

# this = country
on_loan_repaid = {
	on_loan_repaid_estate_privileges_effect = yes
}

# this = country
on_rebels_break_country = {
	add_country_modifier = {
		name = just_lost_to_rebels
		duration = 10
		hidden = yes
	}
}

# this = country
## Fires when you fire or replace your ADM advisor, in the moment before they are actually removed from their post.
## Note: Defining a new advisor here will result in the shortest appointment in history. Use on_post_adm_advisor_fired instead :)
on_pre_adm_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_adm_advisor
		}
		set_country_flag = just_fired_adm_advisor
        remove_advisor_by_category_no_action = ADM
	}
}

# this = country
on_pre_dip_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_dip_advisor
		}
		set_country_flag = just_fired_dip_advisor
        remove_advisor_by_category_no_action = DIP
	}
}

# this = country
on_pre_mil_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_mil_advisor
		}
		set_country_flag = just_fired_mil_advisor
        remove_advisor_by_category_no_action = MIL
	}
}

# this = country
on_post_adm_advisor_fired = {

}

# this = country
on_post_dip_advisor_fired = {
	
}

# this = country
on_post_mil_advisor_fired = {
	
}

# this = new client state, from = parent country
on_create_client_state = {
	
}

# this = new target, from = previous target (both can be non-existent tag)
on_change_revolution_target = {
	
}

# this = curia controller (enactor of the bull)
on_golden_bull_enacted = {
	set_country_flag = enacted_golden_bull
}


# province:  spawned whenever a new owner takes over the province
# FROM = The previous owner.
on_conquest = {
	remove_named_unrest = estate_land_seized
}

on_country_creation = {
	
}